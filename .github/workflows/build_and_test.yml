name: Build and Test

on: [pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build-odb-dbp-runtime:
    name: Build ODB DBP Runtime
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE/odb-sdk/runtime-dbp/runtime -G "Visual Studio 16 2019" -A Win32 -DCMAKE_INSTALL_PREFIX=install

      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --config Release --target install

      - name: Upload archive
        uses: actions/upload-artifact@v3
        with:
          name: odb-runtime-dbp
          path: ${{runner.workspace}}/build/install/*

  build-ubuntu:
    needs: build-odb-dbp-runtime
    name: Build ${{matrix.os}} ${{matrix.build}}
    runs-on: ${{matrix.os}}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        build: [Release, Debug]

    env:
      CXX: g++-10
      CC: gcc-10

    steps:
      - uses: actions/checkout@v2

      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Build bison
        run: wget https://ftp.gnu.org/gnu/bison/bison-3.7.tar.gz && tar -zxvf bison-3.7.tar.gz && pushd bison-3.7/ && ./configure && make -j$(nproc) && sudo make install && popd

      - name: Install packages
        run: sudo apt update && sudo apt install valgrind flex llvm-12 liblld-12-dev

      - name: Versions
        run: bison --version; flex --version

      # - name: Debugging with tmate
      #   # You may pin to the exact commit or the version.
      #   # uses: mxschmitt/action-tmate@04c73044e0fd6cbed37de0cbdd0321d8b4359775
      #   uses: mxschmitt/action-tmate@v3.1
      #   with:
      #     # If apt should be executed with sudo or without
      #     sudo: true # optional, default is true

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -G Ninja -DCMAKE_BUILD_TYPE=${{matrix.build}}

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config ${{matrix.build}}

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: bin/odbc_tests

      - name: Run valgrind
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          valgrind --num-callers=50 \
            --leak-resolution=high \
            --leak-check=full \
            --show-leak-kinds=all \
            --track-origins=yes \
            --time-stamp=yes \
            ./bin/odbc_tests

  build-macos:
    needs: build-odb-dbp-runtime
    name: Build ${{matrix.os}} ${{matrix.build}}
    runs-on: ${{matrix.os}}

    strategy:
      fail-fast: false
      matrix:
        os: [macOS-11]
        build: [Release, Debug]

    steps:
    - uses: actions/checkout@v2

    - uses: seanmiddleditch/gha-setup-ninja@master

    - name: Install packages
      run: |
        brew update && brew install bison flex
        
        echo "$(brew --prefix bison)/bin" >> $GITHUB_PATH
        echo "$(brew --prefix flex)/bin" >> $GITHUB_PATH

    - name: Versions
      run: bison --version; flex --version

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -G Ninja -DCMAKE_BUILD_TYPE=${{matrix.build}} -DLLVM_DIR="$(brew --prefix llvm)/lib/cmake/llvm/"

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.build}}

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: bin/odbc_tests
