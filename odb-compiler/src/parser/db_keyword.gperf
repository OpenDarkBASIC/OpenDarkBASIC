%{
    #include <stddef.h>  /* size_t */
    #include <string.h>  /* strcmp */

    #include "odb-compiler/parser/db_parser.y.h"  /* for list of token values */
    #include "odb-compiler/parser/db_keyword.h"  /* Implementing this interface */
%}

%readonly-tables
%global-table
%language=C
%7bit
%define hash-function-name db_keyword_hash
%define lookup-function-name db_keyword_lookup_impl
%struct-type
// Strings passed in are not null terminated
%compare-lengths

struct db_keyword
{
    const char* name;
    dbtoken_kind_t token;
};

%%
as,                 TOK_AS
inc,                TOK_INC
dec,                TOK_DEC
/* Control flow */
if,                 TOK_IF
then,               TOK_THEN
else,               TOK_ELSE
elseif,             TOK_ELSEIF
endif,              TOK_ENDIF
/* Loops */
while,              TOK_WHILE
endwhile,           TOK_ENDWHILE
repeat,             TOK_REPEAT
until,              TOK_UNTIL
do,                 TOK_DO
loop,               TOK_LOOP
for,                TOK_FOR
to,                 TOK_TO
step,               TOK_STEP
next,               TOK_NEXT
continue,           TOK_CONTINUE
exit,               TOK_EXIT
/* Operators */
or,                 TOK_LOR
and,                TOK_LAND
xor,                TOK_LXOR
not,                TOK_LNOT
%%

//boolean,          TOK_BOOLEAN
//byte,             TOK_BYTE
//case,             TOK_CASE
//complex,          TOK_COMPLEX
//dim,              TOK_DIM
//default,          TOK_DEFAULT
//double,           TOK_DOUBLE
//dword,            TOK_DWORD
//endcase,          TOK_ENDCASE
//endfunction,      TOK_ENDFUNCTION
//endselect,        TOK_ENDSELECT
//endtype,          TOK_ENDTYPE
//exitfunction,     TOK_EXITFUNCTION
//float,            TOK_FLOAT
//function,         TOK_FUNCTION
//global,           TOK_GLOBAL
//gosub,            TOK_GOSUB
//goto,             TOK_GOTO
//integer,          TOK_INTEGER
//local,            TOK_LOCAL
//mat2x2,           TOK_MAT2X2
//mat2x3,           TOK_MAT2X3
//mat2x4,           TOK_MAT2X4
//mat3x2,           TOK_MAT3X2
//mat3x3,           TOK_MAT3X3
//mat3x4,           TOK_MAT3X4
//mat4x2,           TOK_MAT4X2
//mat4x3,           TOK_MAT4X3
//mat4x4,           TOK_MAT4X4
//mod,              TOK_MOD
//quat,             TOK_QUAT
//return,           TOK_RETURN
//select,           TOK_SELECT
//string,           TOK_STRING
//type,             TOK_TYPE
//undim,            TOK_UNDIM
//vec2,             TOK_VEC2
//vec3,             TOK_VEC3
//vec4,             TOK_VEC4
//word,             TOK_WORD

dbtoken_kind_t
db_keyword_lookup(const char* data, struct utf8_span ref)
{
    const struct db_keyword* kw = db_keyword_lookup_impl(data + ref.off, ref.len);
    if (kw == NULL)
        return TOK_EOF;
    return kw->token;
}
