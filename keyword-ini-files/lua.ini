LUA INIT=lua.htm=*no parameters*
LUA DEINIT=lua.htm=*no parameters*
LUA COMPILE FILE=lua.htm=filename_in,filename_out
LUA EXECUTE FILE=lua.htm=filename,usepreprocess
LUA EXECUTE STRING=lua.htm=code_as_string
LUA CREATE TABLE=lua.htm=table_name
LUA DELETE TABLE=lua.htm=table_name
LUA GET INT=lua.htm=(variable_name)
LUA GET FLOAT=lua.htm=(variable_name)
LUA GET STRING$=lua.htm=(variable_name)
LUA SET INT=lua.htm=variable_name,int_value
LUA SET FLOAT=lua.htm=variable_name,float_value
LUA SET STRING=lua.htm=variable_name,string_value
LUA POP INT=lua.htm=return integer(*no parameters*)
LUA POP FLOAT=lua.htm=return float(*no parameters*)
LUA POP STRING$=lua.htm=return string(*no parameters*)
LUA TOP IS INT=lua.htm=return bool(*no parameters*)
LUA TOP IS FLOAT=lua.htm=return bool(*no parameters*)
LUA TOP IS STRING=lua.htm=return bool(*no parameters*)
LUA PUSH INT=lua.htm=integer_value
LUA PUSH FLOAT=lua.htm=float_value
LUA PUSH STRING=lua.htm=string_value
LUA PUSH FUNCTION=lua.htm=function_name
LUA CALL FUNCTION=lua.htm=number_of_arguments,number_of_return_values
LUA REGISTER FUNCTION=lua.htm=function_name,function_pointer
LUA GET ARG COUNT=lua.htm=return integer(*no parameters*)
LUA ERROR OCCURED=lua.htm=return bool(*no parameters*)
LUA ERROR MSG$=lua.htm=return string(*no parameters*)
LUA ERROR RESET=lua.htm=(*no parameters*)
LUA REGISTER ERROR FUNCTION=lua.htm=function_pointer
