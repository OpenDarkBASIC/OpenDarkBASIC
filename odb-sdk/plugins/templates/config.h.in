#pragma once

#define ODBPLUGIN_VERSION_MAJOR ${PROJECT_VERSION_MAJOR}
#define ODBPLUGIN_VERSION_MINOR ${PROJECT_VERSION_MINOR}
#define ODBPLUGIN_VERSION_PATCH ${PROJECT_VERSION_PATCH}
#define ODBPLUGIN_VERSION \
    ((ODBPLUGIN_VERSION_MAJOR << 16) | (ODBPLUGIN_VERSION_MINOR << 8) | ODBPLUGIN_VERSION_PATCH)
#define STRINGIFY_(x) #x
#define STRINGIFY(x) STRINGIFY_(x)
#define ODBPLUGIN_VERSION_STR \
    STRINGIFY(ODBPLUGIN_VERSION_MAJOR) "." STRINGIFY(ODBPLUGIN_VERSION_MINOR) "." STRINGIFY(ODBPLUGIN_VERSION_PATCH)
#undef STRINGIFY_    
#undef STRINGIFY

#define ODBPLUGIN_API ${ODBPLUGIN_API_EXPORT}

#if defined(__cplusplus)
#   define ODBPLUGIN_EXTERN_C extern "C"
#else
#   define ODBPLUGIN_EXTERN_C
#endif

#define ODB_COMMAND0(name, help, ret_type, symbol) \
  ODBPLUGIN_EXTERN_C ODBPLUGIN_API ret_type symbol(void)
#define ODB_COMMAND1(name, help, ret_type, symbol, arg1) \
  ODBPLUGIN_EXTERN_C ODBPLUGIN_API ret_type symbol(arg1)
#define ODB_COMMAND2(name, help, ret_type, symbol, arg1, arg2) \
  ODBPLUGIN_EXTERN_C ODBPLUGIN_API ret_type symbol(arg1, arg2)
#define ODB_COMMAND3(name, help, ret_type, symbol, arg1, arg2, arg3) \
  ODBPLUGIN_EXTERN_C ODBPLUGIN_API ret_type symbol(arg1, arg2, arg3)

